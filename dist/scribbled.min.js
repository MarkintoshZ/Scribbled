var scribbled=function(t){"use strict";class e{constructor(t){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.canvas.style.padding="0",this.canvas.style.margin="0",this.canvas.style.background="transparent",this.canvas.style.width=t.width+"px",this.canvas.style.height=t.height+"px";const e=window.devicePixelRatio;this.canvas.width=Math.floor(t.width*e),this.canvas.height=Math.floor(t.height*e),this.context.scale(e,e),this.pixelRatio=window.devicePixelRatio,this.width=t.width,this.height=t.height}getCanvas(){return this.canvas}getContext(){return this.context}getPixelRatio(){return this.pixelRatio}setWidth(t){this.width=this.canvas.width=t*this.pixelRatio,this.canvas.style.width=t+"px";const e=this.pixelRatio;this.getContext().scale(e,e)}setHeight(t){this.height=this.canvas.height=t*this.pixelRatio,this.canvas.style.height=t+"px";const e=this.pixelRatio;this.getContext().scale(e,e)}getWidth(){return this.width}getHeight(){return this.height}setSize(t,e){this.setWidth(t||0),this.setHeight(e||0)}toDataURL(t,e){try{return this.canvas.toDataURL(t,e)}catch(t){try{return this.canvas.toDataURL()}catch(t){return""}}}attachDom(t){t.appendChild(this.getCanvas())}}var s;!function(t){t.Brush="BRUSH",t.Eraser="ERASER"}(s||(s={}));class i{constructor(t=[{type:s.Brush,color:"#000",size:1},{type:s.Eraser,size:1}]){this.selectedIdx=0,this.tools=t}setToolByIdx(t){this.selectedIdx=t}setToolByType(t){this.selectedIdx=this.tools.findIndex((e=>e.type.valueOf()==t))}get selectedTool(){return this.tools[this.selectedIdx]}}class o{constructor(){this.strokes=new Map}add(t){if(this.strokes.has(t.hitColor))throw new Error(`Stroke with hitColor ${t.hitColor} already exists`);this.set(t)}delete(t){this.strokes.delete(t)}set(t){this.strokes.set(t.hitColor,t)}checkOverlap(t){for(const e of this.strokes.values())if(e.aabb.overlap(t))return!0}getOverlap(t){return[...this.strokes.values()].filter((e=>e.aabb.overlap(t)))}genHitColor(){let t;do{t="#"+Math.floor(16777215*Math.random()).toString(16)}while(this.strokes.has(t));return t}}class r{strokeContinue(t,e,s){if(!this.stroke)return;this.stroke.x.push(t),this.stroke.y.push(e),this.stroke.pressure.push(s);const i=this.stroke.x.length;return{x:this.stroke.x[i-2],y:this.stroke.y[i-2],pressure:this.stroke.pressure[i-2],color:this.stroke.color,hitColor:this.stroke.hitColor}}strokeStart({x:t,y:e,pressure:s,color:i,hitColor:o}){this.stroke={x:[t],y:[e],pressure:[s],color:i,hitColor:o,aabb:null}}strokeComplete(){if(null===this.stroke)throw new Error("Cannot complete stroke before stroke start is called");const t=this.stroke;return this.stroke=null,t}}class h{constructor(t,e,s,i){this.canvas=t,this.renderer=e,this.boardData=s,this.toolBox=i,this.toolDown=!1,this.strokeConstructor=new r,this.canvas.addEventListener("pointerdown",this.handlePointerDown.bind(this)),this.canvas.addEventListener("pointerup",this.handlePointerUpAndLeave.bind(this)),this.canvas.addEventListener("pointermove",this.handlePointerMove.bind(this)),this.canvas.addEventListener("pointerleave",this.handlePointerUpAndLeave.bind(this))}dispose(){this.canvas.removeEventListener("pointerdown",this.handlePointerDown.bind(this)),this.canvas.removeEventListener("pointerup",this.handlePointerUpAndLeave.bind(this)),this.canvas.removeEventListener("pointermove",this.handlePointerMove.bind(this)),this.canvas.removeEventListener("pointerleave",this.handlePointerUpAndLeave.bind(this))}handlePointerDown(t){this.toolDown=!0;const e=this.createPoint(t);this.strokeConstructor.strokeStart(e),this.renderer.strokeStart(e)}handlePointerMove(t){if(!this.toolDown)return;const e=this.strokeConstructor.strokeContinue(t.offsetX,t.offsetY,this.calculatePressure(t.pressure)),s=this.createPoint(t);this.renderer.strokeContinue(s,e)}handlePointerUpAndLeave(t){this.toolDown&&(this.handlePointerMove(t),this.toolDown=!1,this.boardData.add(this.strokeConstructor.strokeComplete()))}createPoint(t){return{x:t.offsetX,y:t.offsetY,pressure:this.calculatePressure(t.pressure),color:this.toolBox.selectedTool.color,hitColor:this.boardData.genHitColor()}}calculatePressure(t){return 50*t+this.toolBox.selectedTool.size}}class a{constructor(t,e){this.canvasCtx=t,this.hitCanvasCtx=e}strokeStart(t){this.drawCircle(this.canvasCtx,t.color,t),this.drawCircle(this.hitCanvasCtx,t.hitColor,t)}drawCircle(t,e,s){t.fillStyle=e,t.beginPath(),t.ellipse(s.x,s.y,s.pressure,s.pressure,0,0,2*Math.PI),t.closePath(),t.fill()}strokeContinue(t,e){this.paintLine(this.canvasCtx,t.x,t.y,t.pressure,e.x,e.y,e.pressure,t.color),this.paintLine(this.hitCanvasCtx,t.x,t.y,t.pressure,e.x,e.y,e.pressure,t.hitColor)}paintLine(t,e,s,i,o,r,h,a){t.fillStyle=a;const n=Math.atan((s-r)/(e-o));t.beginPath(),t.moveTo(Math.cos(n+Math.PI/2)*h+o,Math.sin(n+Math.PI/2)*h+r),t.lineTo(Math.cos(n-Math.PI/2)*h+o,Math.sin(n-Math.PI/2)*h+r),t.lineTo(Math.cos(n-Math.PI/2)*i+e,Math.sin(n-Math.PI/2)*i+s),t.lineTo(Math.cos(n+Math.PI/2)*i+e,Math.sin(n+Math.PI/2)*i+s),t.closePath(),t.fill(),t.beginPath(),t.arc(e,s,i-.1,0,2*Math.PI),t.closePath(),t.fill()}strokeRender(t){}}class n{constructor({container:t,width:s=640,height:r=400}){const n="string"==typeof t?document.getElementById(t):t;if(!n)throw Error(`Invalid argument: container = ${t}`);this.width=s,this.height=r,this.canvasContainer=document.createElement("div"),this.canvasContainer.style.cursor="crosshair",n.appendChild(this.canvasContainer),this.canvas=new e({width:s,height:r}),this.hitCanvas=new e({width:s,height:r}),this.canvasContainer.appendChild(this.canvas.getCanvas()),this.toolBox=new i,this.boardData=new o,this.canvasController=new h(this.canvas.getCanvas(),new a(this.canvas.getContext(),this.hitCanvas.getContext()),this.boardData,this.toolBox)}dispose(){this.canvasController.dispose()}getHeight(){return this.height}getWidth(){return this.width}}return t.Board=n,t.default=n,Object.defineProperty(t,"__esModule",{value:!0}),t}({});
