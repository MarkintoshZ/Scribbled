var scribbled=function(t){"use strict";class e{constructor(t){this._canvas=document.createElement("canvas");const e=this._canvas.getContext("2d");if(!e)throw new Error("Cannot get canvas context");this._context=e,this._canvas.style.padding="0",this._canvas.style.margin="0",this._canvas.style.background="transparent",this._canvas.style.width=t.width+"px",this._canvas.style.height=t.height+"px";const s=window.devicePixelRatio;this._canvas.width=Math.floor(t.width*s),this._canvas.height=Math.floor(t.height*s),this._context.scale(s,s),this._pixelRatio=window.devicePixelRatio,this._width=t.width,this._height=t.height}getCanvas(){return this._canvas}get canvasCtx(){return this._context}getPixelRatio(){return this._pixelRatio}get width(){return this._width}set width(t){this._width=this._canvas.width=t*this._pixelRatio,this._canvas.style.width=t+"px";const e=this._pixelRatio;this.canvasCtx.scale(e,e)}get height(){return this._height}set height(t){this._height=this._canvas.height=t*this._pixelRatio,this._canvas.style.height=t+"px";const e=this._pixelRatio;this.canvasCtx.scale(e,e)}setSize(t,e){this.width=t||this.width,this.height=e||this.height}toDataURL(t,e){try{return this._canvas.toDataURL(t,e)}catch(t){try{return this._canvas.toDataURL()}catch(t){return""}}}attachDom(t){t.appendChild(this.getCanvas())}}var s;!function(t){t.Brush="BRUSH",t.Eraser="ERASER"}(s||(s={}));class i{constructor(t=[{type:s.Brush,color:"#000",size:1,pressureSensitivity:50,triggerKey:["KeyP","KeyB"]},{type:s.Eraser,triggerKey:"KeyE"}]){this.selectedIdx=0,this.tools=t}setToolByIdx(t){this.selectedIdx=t}get selectedTool(){return this.tools[this.selectedIdx]}}class r{constructor(t,e){this.x=t.x,this.y=t.y,this.width=e.x-t.x,this.height=e.y-t.y}overlap(t){return this.x<=t.x+t.width&&this.y<=t.y+t.height&&this.x+this.width>=t.x&&this.y+this.height>=t.y}union(t){return new r({x:Math.min(this.x,t.x),y:Math.min(this.y,t.y)},{x:Math.max(this.x+this.width,t.x+this.width),y:Math.max(this.y+this.height,t.y+t.height)})}expand(t){this.x-=t,this.y-=t,this.width+=2*t,this.height+=2*t}}class o{constructor(){this.strokes=new Map}add(t){if(this.strokes.has(t.hitColor))throw new Error(`Stroke with hitColor ${t.hitColor} already exists`);this.set(t)}delete(t){this.strokes.delete(t)}set(t){this.strokes.set(t.hitColor,t)}get(t){return this.strokes.get(t)}checkOverlap(t){var e;for(const s of this.strokes.values())if(null===(e=s.aabb)||void 0===e?void 0:e.overlap(t))return!0;return!1}getOverlap(t){return[...this.strokes.values()].filter((e=>{var s;return null===(s=e.aabb)||void 0===s?void 0:s.overlap(t)}))}genHitColor(){let t;do{t="#"+(16777215*Math.random()<<0).toString(16).padStart(6,"0")}while(this.strokes.has(t));return t}}class h{constructor(){this.stroke=null}strokeContinue({x:t,y:e,radius:s}){if(!this.stroke)throw new Error("Cannot continue stroke before strokeStart is called");this.stroke.x.push(t),this.stroke.y.push(e),this.stroke.radius.push(s);const i=this.stroke.x.length;return[{x:this.stroke.x[i-2],y:this.stroke.y[i-2],radius:this.stroke.radius[i-2]},{color:this.stroke.color,hitColor:this.stroke.hitColor}]}strokeStart({x:t,y:e,radius:s,color:i,hitColor:r}){this.stroke={x:[t],y:[e],radius:[s],color:i,hitColor:r,aabb:null}}strokeComplete(){if(null===this.stroke)throw new Error("Cannot complete stroke before strokeStart is called");this.stroke.aabb=new r({x:Math.min(...this.stroke.x),y:Math.min(...this.stroke.y)},{x:Math.max(...this.stroke.x),y:Math.max(...this.stroke.y)});const t=Math.max(...this.stroke.radius);this.stroke.aabb.expand(t+3);const e=this.stroke;return this.stroke=null,e}}class a{constructor(t,e,s,i){this.canvas=t,this.renderer=e,this.boardData=s,this.toolBox=i,this.currentTool=null,this.strokeConstructor=new h,this.canvas.addEventListener("pointerdown",this.handlePointerDown.bind(this)),this.canvas.addEventListener("pointerup",this.handlePointerUpAndLeave.bind(this)),this.canvas.addEventListener("pointermove",this.handlePointerMove.bind(this)),this.canvas.addEventListener("pointerleave",this.handlePointerUpAndLeave.bind(this))}dispose(){this.canvas.removeEventListener("pointerdown",this.handlePointerDown.bind(this)),this.canvas.removeEventListener("pointerup",this.handlePointerUpAndLeave.bind(this)),this.canvas.removeEventListener("pointermove",this.handlePointerMove.bind(this)),this.canvas.removeEventListener("pointerleave",this.handlePointerUpAndLeave.bind(this))}handlePointerDown(t){if(this.currentTool=Object.assign({},this.toolBox.selectedTool),this.currentTool.type===s.Eraser)return this.erase(this.createPoint(t));const e=this.createStyledPoint(t);this.strokeConstructor.strokeStart(e),this.renderer.strokeStart(e)}handlePointerMove(t){if(null===this.currentTool)return;const e=this.createPoint(t);if(this.currentTool.type===s.Eraser)return this.erase(e);const[i,{color:r,hitColor:o}]=this.strokeConstructor.strokeContinue(e);this.renderer.strokeContinue({from:i,to:e,color:r,hitColor:o})}handlePointerUpAndLeave(t){null!==this.currentTool&&(this.currentTool.type!==s.Eraser&&(this.handlePointerMove(t),this.boardData.add(this.strokeConstructor.strokeComplete())),this.currentTool=null)}erase(t){const e=this.renderer.getHitCvsColor(t);if(!this.boardData.get(e))return;const s=this.boardData.get(e);if(!(null==s?void 0:s.aabb))throw new Error("Cannot find stroke to erase or its bounding box is null");const i=s.aabb;this.renderer.clearRect(i),this.boardData.delete(e);this.boardData.getOverlap(i).forEach((t=>this.renderer.strokeRender(t)))}createPoint(t){return{x:t.offsetX,y:t.offsetY,radius:this.calculatePressure(t.pressure)}}createStyledPoint(t){var e;if(!(null===(e=this.currentTool)||void 0===e?void 0:e.color))throw new Error("current tool does not have a color property");return Object.assign(Object.assign({},this.createPoint(t)),{color:this.currentTool.color,hitColor:this.boardData.genHitColor()})}calculatePressure(t){var e,s,i,r;return t*(null!==(s=null===(e=this.currentTool)||void 0===e?void 0:e.pressureSensitivity)&&void 0!==s?s:1)+(null!==(r=null===(i=this.currentTool)||void 0===i?void 0:i.size)&&void 0!==r?r:1)}}class n{constructor(t,e){this.canvasCtx=t,this.hitCanvasCtx=e}getHitCvsColor({x:t,y:e}){const s=this.hitCanvasCtx.getImageData(t,e,1,1).data;return"#"+("000000"+this.rgbToHex(s[0],s[1],s[2])).slice(-6)}rgbToHex(t,e,s){if(t>255||e>255||s>255)throw"Invalid color component";return(t<<16|e<<8|s).toString(16)}clearRect(t){this.canvasCtx.clearRect(t.x,t.y,t.width,t.height),this.hitCanvasCtx.clearRect(t.x,t.y,t.width,t.height)}strokeStart(t){this.drawCircle(this.canvasCtx,t.color,t),this.drawCircle(this.hitCanvasCtx,t.hitColor,Object.assign(Object.assign({},t),{radius:Math.max(2,t.radius)}))}drawCircle(t,e,s){t.fillStyle=e,t.beginPath(),t.ellipse(s.x,s.y,s.radius,s.radius,0,0,2*Math.PI),t.closePath(),t.fill()}strokeContinue({from:t,to:e,color:s,hitColor:i}){this.paintLine(this.canvasCtx,e.x,e.y,e.radius,t.x,t.y,t.radius,s),this.paintLine(this.hitCanvasCtx,e.x,e.y,Math.max(e.radius,2),t.x,t.y,Math.max(t.radius,2),i)}paintLine(t,e,s,i,r,o,h,a){t.fillStyle=a;const n=Math.atan((s-o)/(e-r));t.beginPath(),t.moveTo(Math.cos(n+Math.PI/2)*h+r,Math.sin(n+Math.PI/2)*h+o),t.lineTo(Math.cos(n-Math.PI/2)*h+r,Math.sin(n-Math.PI/2)*h+o),t.lineTo(Math.cos(n-Math.PI/2)*i+e,Math.sin(n-Math.PI/2)*i+s),t.lineTo(Math.cos(n+Math.PI/2)*i+e,Math.sin(n+Math.PI/2)*i+s),t.closePath(),t.fill(),t.beginPath(),t.arc(e,s,i-.1,0,2*Math.PI),t.closePath(),t.fill()}strokeRender({x:t,y:e,radius:s,color:i,hitColor:r}){this.strokeStart({x:t[0],y:e[0],radius:s[0],color:i,hitColor:r});for(let o=0;o<t.length;o++)this.strokeContinue({from:{x:t[o-1],y:e[o-1],radius:s[o-1]},to:{x:t[o],y:e[o],radius:s[o]},color:i,hitColor:r})}}class l{constructor(t){this.toolBox=t,document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this))}dispose(){document.removeEventListener("keydown",this.handleKeyDown.bind(this)),document.removeEventListener("keyup",this.handleKeyUp.bind(this))}handleKeyDown(t){if(t.defaultPrevented)return;this.toolBox.tools.some(((e,s)=>{if(e.triggerKey&&((t,e)=>("string"==typeof e&&(e=[e]),e.some((e=>{const s=e.includes("Ctrl"),i=e.includes("Shift"),r=e.includes("Alt"),o=e.includes("Meta");if(["Ctrl","Shift","Alt","Meta"].includes(e))return t.ctrlKey==s&&t.shiftKey==i&&t.altKey==r&&t.metaKey==o;const h=e.split("+").pop();return t.ctrlKey==s&&t.shiftKey==i&&t.altKey==r&&t.metaKey==o&&t.code==h}))))(t,e.triggerKey))return this.toolBox.setToolByIdx(s),!0}))&&t.preventDefault()}handleKeyUp(t){}}class c{constructor({container:t,width:s=640,height:r=400,toolBox:h=new i}){const c="string"==typeof t?document.getElementById(t):t;if(!c)throw Error(`Invalid argument: container = ${t}`);this.width=s,this.height=r,this.canvasContainer=document.createElement("div"),this.canvasContainer.style.cursor="crosshair",c.appendChild(this.canvasContainer),this.canvas=new e({width:s,height:r}),this.hitCanvas=new e({width:s,height:r}),this.canvas.attachDom(this.canvasContainer),this.toolBox=h,this.canvasData=new o,this.canvasController=new a(this.canvas.getCanvas(),new n(this.canvas.canvasCtx,this.hitCanvas.canvasCtx),this.canvasData,this.toolBox),this.toolBoxController=new l(this.toolBox)}dispose(){this.canvasController.dispose(),this.toolBoxController.dispose()}getHeight(){return this.height}getWidth(){return this.width}}return t.Board=c,t.default=c,Object.defineProperty(t,"__esModule",{value:!0}),t}({});
